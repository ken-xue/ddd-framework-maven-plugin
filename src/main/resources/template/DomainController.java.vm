package ${basePackageName}.adapter.rest.${moduleName};

import ${basePackageName}.adapter.common.annotation.Permissions;
import ${basePackageName}.adapter.rest.common.BasicController;
import ${basePackageName}.coreclient.api.sys.${className}AppService;
import ${basePackageName}.coreclient.dto.common.response.Response;
import ${basePackageName}.coreclient.dto.${moduleName}.${allLowName}.*;
import org.springframework.web.bind.annotation.*;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import io.swagger.annotations.ApiOperation;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import javax.annotation.Resource;
import javax.validation.Valid;
/**
 * ${comments}
 * @author ${author}
 * @date ${datetime}
 */
@RestController
@Api(tags = "${comments}模块",description = "包含新增/列表/删除")
@RequestMapping("${moduleName}/${pathName}")
public class ${className}Controller extends BasicController {
    @Resource
    private ${className}AppService ${classname}AppService;

    @PostMapping("/add")
    @Permissions("${moduleName}:${classname}:add")
    @ApiOperation(value = "添加",httpMethod = "POST")
    public Response add(@RequestBody @Valid ${className}AddCmd cmd) {
        return ${classname}AppService.add(cmd);
    }

    @DeleteMapping("/delete")
    @Permissions("${moduleName}:${classname}:delete")
    @ApiOperation(value = "删除",httpMethod = "DELETE")
    public Response delete(@RequestBody @Valid ${className}DeleteCmd cmd){
        return ${classname}AppService.delete(cmd);
    }

    @GetMapping("/page")
    @Permissions("${moduleName}:${classname}:page")
    @ApiOperation(value = "列表",httpMethod = "GET")
    @ApiResponses({
            @ApiResponse(code = 2000, message = "OK", response = ${className}DTO.class)
    })
    public Response page(@ModelAttribute @Valid ${className}PageQry qry){
        return ${classname}AppService.page(qry);
    }

    @GetMapping("/list")
    @Permissions("${moduleName}:${classname}:list")
    @ApiOperation(value = "列表",httpMethod = "GET")
    @ApiResponses({
            @ApiResponse(code = 2000, message = "OK", response = ${className}DTO.class)
    })
    public Response list(@ModelAttribute @Valid ${className}ListQry qry){
        return ${classname}AppService.list(qry);
    }

    @GetMapping("/info")
    @Permissions("${moduleName}:${classname}:info")
    @ApiOperation(value = "详情",httpMethod = "GET")
    @ApiResponses({
            @ApiResponse(code = 2000, message = "OK", response = ${className}DTO.class)
    })
    public Response info(@ModelAttribute @Valid ${className}GetQry qry){
        return ${classname}AppService.getById(qry);
    }

    @PutMapping("/update")
    @Permissions("${moduleName}:${classname}:update")
    @ApiOperation(value = "更新",httpMethod = "PUT")
    public Response update(@RequestBody ${className}UpdateCmd cmd){
        return ${classname}AppService.update(cmd);
    }
}
