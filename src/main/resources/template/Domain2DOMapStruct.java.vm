package io.ddd.framework.infrastructure.repositoryimpl.${moduleName}.database.convertor;

import io.ddd.framework.domain.domain.${moduleName}.${className};
import io.ddd.framework.infrastructure.repositoryimpl.${moduleName}.database.dataobject.${className}DO;
import org.mapstruct.Mapper;
import org.mapstruct.Mappings;
import org.mapstruct.ReportingPolicy;
import org.mapstruct.factory.Mappers;
import java.util.List;
/**
 * ${comments}
 * @author ${author}
 * @date ${datetime}
 */
@Mapper(componentModel = "spring", unmappedTargetPolicy = ReportingPolicy.IGNORE)
public interface ${className}2DOMapStruct {

    ${className}2DOMapStruct INSTANCE = Mappers.getMapper(${className}2DOMapStruct.class);

    @Mappings({})
    ${className}DO toDO(${className} ${classname});

    @Mappings({})
    ${className} toDomain(${className}DO ${classname}DO);

    List<${className}DO> toDOList(List<${className}> ${classname}List);

    List<${className}> toDomainList(List<${className}DO> ${classname}DOList);
}
