package ${basePackageName}.application.application.${moduleName}.${allLowName}.service;

import ${basePackageName}.coreclient.api.${moduleName}.${className}AppService;
import ${basePackageName}.coreclient.dto.${moduleName}.${allLowName}.*;
import ${basePackageName}.application.application.${moduleName}.${allLowName}.command.${className}AddCmdExe;
import ${basePackageName}.application.application.${moduleName}.${allLowName}.command.${className}DeleteCmdExe;
import ${basePackageName}.application.application.${moduleName}.${allLowName}.command.${className}UpdateCmdExe;
import ${basePackageName}.application.application.${moduleName}.${allLowName}.command.query.${className}GetQryExe;
import ${basePackageName}.application.application.${moduleName}.${allLowName}.command.query.${className}ListQryExe;
import ${basePackageName}.application.application.${moduleName}.${allLowName}.command.query.${className}PageQryExe;
import ${basePackageName}.coreclient.dto.common.response.MultiResponse;
import ${basePackageName}.coreclient.dto.common.response.PageResponse;
import ${basePackageName}.coreclient.dto.common.response.Response;
import ${basePackageName}.coreclient.dto.common.response.SingleResponse;
import org.springframework.stereotype.Service;

import javax.annotation.Resource;

/**
 * ${comments}
 * @author ${author}
 * @date ${datetime}
 */
@Service
public class ${className}AppServiceImpl implements ${className}AppService {
    @Resource
    private ${className}AddCmdExe ${classname}AddCmdExe;
    @Resource
    private ${className}UpdateCmdExe ${classname}UpdateCmdExe;
    @Resource
    private ${className}GetQryExe ${classname}GetQryExe;
    @Resource
    private ${className}ListQryExe ${classname}ListQryExe;
    @Resource
    private ${className}PageQryExe ${classname}PageQryExe;
    @Resource
    private ${className}DeleteCmdExe ${classname}DeleteCmdExe;

    public Response add(${className}AddCmd ${classname}AddCmd) {
        return  ${classname}AddCmdExe.execute(${classname}AddCmd);
    }

    public Response update(${className}UpdateCmd cmd) {
        return ${classname}UpdateCmdExe.execute(cmd);
    }

    public SingleResponse<${className}DTO> getById(${className}GetQry qry) {
        return ${classname}GetQryExe.execute(qry);
    }

    public MultiResponse<${className}DTO> list(${className}ListQry qry) {
        return ${classname}ListQryExe.execute(qry);
    }

    public Response delete(${className}DeleteCmd ${classname}DeleteCmd) {
        return ${classname}DeleteCmdExe.execute(${classname}DeleteCmd);
    }

    public PageResponse<${className}DTO> page(${className}PageQry ${classname}PageQry) {
        return ${classname}PageQryExe.execute(${classname}PageQry);
    }

}
